{"id":"index.js","dependencies":[{"name":"/Users/Andrew/Desktop/graphql-course/apollo-client/package.json","includedInParent":true,"mtime":1536848280567},{"name":"apollo-boost","loc":{"line":1,"column":33},"parent":"/Users/Andrew/Desktop/graphql-course/apollo-client/src/index.js","resolved":"/Users/Andrew/Desktop/graphql-course/apollo-client/node_modules/apollo-boost/lib/index.js"}],"generated":{"js":"'use strict';\n\nvar _templateObject = _taggedTemplateLiteral(['\\n    query {\\n        users {\\n            id\\n            name\\n        }\\n    }\\n'], ['\\n    query {\\n        users {\\n            id\\n            name\\n        }\\n    }\\n']),\n    _templateObject2 = _taggedTemplateLiteral(['\\n    query {\\n        posts {\\n            title\\n            author {\\n                name\\n            }\\n        }\\n    }\\n'], ['\\n    query {\\n        posts {\\n            title\\n            author {\\n                name\\n            }\\n        }\\n    }\\n']);\n\nvar _apolloBoost = require('apollo-boost');\n\nvar _apolloBoost2 = _interopRequireDefault(_apolloBoost);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n// Questions:\n// 1. How do we define an operation in JavaScript?\n// 2. How do we send that off to the server to fetch a response?\n// 3. How do we access the response?\n\nvar client = new _apolloBoost2.default({\n    uri: 'http://localhost:4000'\n});\n\nvar getUsers = (0, _apolloBoost.gql)(_templateObject);\n\nclient.query({\n    query: getUsers\n}).then(function (response) {\n    var html = '';\n\n    response.data.users.forEach(function (user) {\n        html += '\\n            <div>\\n                <h3>' + user.name + '</h3>\\n            </div>\\n        ';\n    });\n\n    document.getElementById('users').innerHTML = html;\n});\n\n//\n// Goal: Render all published posts to the browser\n//\n// 1. Define the operation using gql \n// 2. Send off the query using client\n// 3. Use the response data to render a list of post titles along with author names\n// 4. Test your work\n\nvar getPosts = (0, _apolloBoost.gql)(_templateObject2);\n\nclient.query({ query: getPosts }).then(function (response) {\n    var html = '';\n\n    response.data.posts.forEach(function (post) {\n        html += '\\n            <div>\\n                <h3>' + post.title + '</h3>\\n                <h4>' + post.author.name + '</h4>\\n            </div>\\n        ';\n    });\n\n    document.getElementById('posts').innerHTML = html;\n});","map":{"mappings":[{"generated":{"line":6,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":14,"column":0},"source":"index.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"index.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"index.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"index.js","original":{"line":6,"column":0}},{"generated":{"line":19,"column":0},"source":"index.js","original":{"line":8,"column":0}},{"name":"client","generated":{"line":19,"column":4},"source":"index.js","original":{"line":8,"column":6}},{"generated":{"line":19,"column":13},"source":"index.js","original":{"line":8,"column":15}},{"name":"ApolloBoost","generated":{"line":19,"column":17},"source":"index.js","original":{"line":8,"column":19}},{"generated":{"line":19,"column":38},"source":"index.js","original":{"line":8,"column":15}},{"generated":{"line":19,"column":39},"source":"index.js","original":{"line":8,"column":31}},{"name":"uri","generated":{"line":20,"column":0},"source":"index.js","original":{"line":9,"column":4}},{"generated":{"line":20,"column":9},"source":"index.js","original":{"line":9,"column":9}},{"generated":{"line":21,"column":0},"source":"index.js","original":{"line":8,"column":31}},{"generated":{"line":21,"column":1},"source":"index.js","original":{"line":8,"column":15}},{"generated":{"line":21,"column":2},"source":"index.js","original":{"line":8,"column":0}},{"generated":{"line":23,"column":0},"source":"index.js","original":{"line":12,"column":0}},{"name":"getUsers","generated":{"line":23,"column":4},"source":"index.js","original":{"line":12,"column":6}},{"name":"gql","generated":{"line":23,"column":19},"source":"index.js","original":{"line":12,"column":17}},{"generated":{"line":23,"column":35},"source":"index.js","original":{"line":12,"column":6}},{"generated":{"line":23,"column":53},"source":"index.js","original":{"line":12,"column":0}},{"name":"client","generated":{"line":25,"column":0},"source":"index.js","original":{"line":21,"column":0}},{"name":"query","generated":{"line":25,"column":7},"source":"index.js","original":{"line":21,"column":7}},{"generated":{"line":25,"column":12},"source":"index.js","original":{"line":21,"column":0}},{"generated":{"line":25,"column":13},"source":"index.js","original":{"line":21,"column":13}},{"name":"query","generated":{"line":26,"column":0},"source":"index.js","original":{"line":22,"column":4}},{"name":"getUsers","generated":{"line":26,"column":11},"source":"index.js","original":{"line":22,"column":11}},{"generated":{"line":27,"column":0},"source":"index.js","original":{"line":21,"column":13}},{"generated":{"line":27,"column":1},"source":"index.js","original":{"line":21,"column":0}},{"name":"then","generated":{"line":27,"column":3},"source":"index.js","original":{"line":23,"column":3}},{"generated":{"line":27,"column":7},"source":"index.js","original":{"line":21,"column":0}},{"generated":{"line":27,"column":8},"source":"index.js","original":{"line":23,"column":8}},{"name":"response","generated":{"line":27,"column":18},"source":"index.js","original":{"line":23,"column":9}},{"generated":{"line":27,"column":26},"source":"index.js","original":{"line":23,"column":8}},{"generated":{"line":27,"column":28},"source":"index.js","original":{"line":23,"column":22}},{"generated":{"line":28,"column":0},"source":"index.js","original":{"line":24,"column":4}},{"name":"html","generated":{"line":28,"column":8},"source":"index.js","original":{"line":24,"column":8}},{"generated":{"line":28,"column":15},"source":"index.js","original":{"line":24,"column":15}},{"generated":{"line":28,"column":17},"source":"index.js","original":{"line":24,"column":4}},{"name":"response","generated":{"line":30,"column":0},"source":"index.js","original":{"line":26,"column":4}},{"name":"data","generated":{"line":30,"column":13},"source":"index.js","original":{"line":26,"column":13}},{"generated":{"line":30,"column":17},"source":"index.js","original":{"line":26,"column":4}},{"name":"users","generated":{"line":30,"column":18},"source":"index.js","original":{"line":26,"column":18}},{"generated":{"line":30,"column":23},"source":"index.js","original":{"line":26,"column":4}},{"name":"forEach","generated":{"line":30,"column":24},"source":"index.js","original":{"line":26,"column":24}},{"generated":{"line":30,"column":31},"source":"index.js","original":{"line":26,"column":4}},{"generated":{"line":30,"column":32},"source":"index.js","original":{"line":26,"column":32}},{"name":"user","generated":{"line":30,"column":42},"source":"index.js","original":{"line":26,"column":33}},{"generated":{"line":30,"column":46},"source":"index.js","original":{"line":26,"column":32}},{"generated":{"line":30,"column":48},"source":"index.js","original":{"line":26,"column":42}},{"name":"html","generated":{"line":31,"column":0},"source":"index.js","original":{"line":27,"column":8}},{"name":"user","generated":{"line":31,"column":62},"source":"index.js","original":{"line":29,"column":22}},{"name":"name","generated":{"line":31,"column":67},"source":"index.js","original":{"line":29,"column":27}},{"generated":{"line":31,"column":71},"source":"index.js","original":{"line":27,"column":8}},{"generated":{"line":32,"column":0},"source":"index.js","original":{"line":32,"column":5}},{"generated":{"line":32,"column":5},"source":"index.js","original":{"line":26,"column":4}},{"name":"document","generated":{"line":34,"column":0},"source":"index.js","original":{"line":34,"column":4}},{"name":"getElementById","generated":{"line":34,"column":13},"source":"index.js","original":{"line":34,"column":13}},{"generated":{"line":34,"column":27},"source":"index.js","original":{"line":34,"column":4}},{"generated":{"line":34,"column":28},"source":"index.js","original":{"line":34,"column":28}},{"generated":{"line":34,"column":35},"source":"index.js","original":{"line":34,"column":4}},{"name":"innerHTML","generated":{"line":34,"column":37},"source":"index.js","original":{"line":34,"column":37}},{"generated":{"line":34,"column":46},"source":"index.js","original":{"line":34,"column":4}},{"name":"html","generated":{"line":34,"column":49},"source":"index.js","original":{"line":34,"column":49}},{"generated":{"line":34,"column":53},"source":"index.js","original":{"line":34,"column":4}},{"generated":{"line":35,"column":0},"source":"index.js","original":{"line":35,"column":1}},{"generated":{"line":35,"column":1},"source":"index.js","original":{"line":21,"column":0}},{"generated":{"line":37,"column":0},"source":"index.js","original":{"line":37,"column":0}},{"generated":{"line":38,"column":0},"source":"index.js","original":{"line":38,"column":0}},{"generated":{"line":39,"column":0},"source":"index.js","original":{"line":39,"column":0}},{"generated":{"line":40,"column":0},"source":"index.js","original":{"line":40,"column":0}},{"generated":{"line":41,"column":0},"source":"index.js","original":{"line":41,"column":0}},{"generated":{"line":42,"column":0},"source":"index.js","original":{"line":42,"column":0}},{"generated":{"line":43,"column":0},"source":"index.js","original":{"line":43,"column":0}},{"generated":{"line":45,"column":0},"source":"index.js","original":{"line":45,"column":0}},{"name":"getPosts","generated":{"line":45,"column":4},"source":"index.js","original":{"line":45,"column":6}},{"name":"gql","generated":{"line":45,"column":19},"source":"index.js","original":{"line":45,"column":17}},{"generated":{"line":45,"column":35},"source":"index.js","original":{"line":45,"column":6}},{"generated":{"line":45,"column":54},"source":"index.js","original":{"line":45,"column":0}},{"name":"client","generated":{"line":47,"column":0},"source":"index.js","original":{"line":56,"column":0}},{"name":"query","generated":{"line":47,"column":7},"source":"index.js","original":{"line":56,"column":7}},{"generated":{"line":47,"column":12},"source":"index.js","original":{"line":56,"column":0}},{"generated":{"line":47,"column":13},"source":"index.js","original":{"line":56,"column":13}},{"name":"query","generated":{"line":47,"column":15},"source":"index.js","original":{"line":56,"column":15}},{"name":"getPosts","generated":{"line":47,"column":22},"source":"index.js","original":{"line":56,"column":22}},{"generated":{"line":47,"column":30},"source":"index.js","original":{"line":56,"column":13}},{"generated":{"line":47,"column":32},"source":"index.js","original":{"line":56,"column":0}},{"name":"then","generated":{"line":47,"column":34},"source":"index.js","original":{"line":56,"column":34}},{"generated":{"line":47,"column":38},"source":"index.js","original":{"line":56,"column":0}},{"generated":{"line":47,"column":39},"source":"index.js","original":{"line":56,"column":39}},{"name":"response","generated":{"line":47,"column":49},"source":"index.js","original":{"line":56,"column":40}},{"generated":{"line":47,"column":57},"source":"index.js","original":{"line":56,"column":39}},{"generated":{"line":47,"column":59},"source":"index.js","original":{"line":56,"column":53}},{"generated":{"line":48,"column":0},"source":"index.js","original":{"line":57,"column":4}},{"name":"html","generated":{"line":48,"column":8},"source":"index.js","original":{"line":57,"column":8}},{"generated":{"line":48,"column":15},"source":"index.js","original":{"line":57,"column":15}},{"generated":{"line":48,"column":17},"source":"index.js","original":{"line":57,"column":4}},{"name":"response","generated":{"line":50,"column":0},"source":"index.js","original":{"line":59,"column":4}},{"name":"data","generated":{"line":50,"column":13},"source":"index.js","original":{"line":59,"column":13}},{"generated":{"line":50,"column":17},"source":"index.js","original":{"line":59,"column":4}},{"name":"posts","generated":{"line":50,"column":18},"source":"index.js","original":{"line":59,"column":18}},{"generated":{"line":50,"column":23},"source":"index.js","original":{"line":59,"column":4}},{"name":"forEach","generated":{"line":50,"column":24},"source":"index.js","original":{"line":59,"column":24}},{"generated":{"line":50,"column":31},"source":"index.js","original":{"line":59,"column":4}},{"generated":{"line":50,"column":32},"source":"index.js","original":{"line":59,"column":32}},{"name":"post","generated":{"line":50,"column":42},"source":"index.js","original":{"line":59,"column":33}},{"generated":{"line":50,"column":46},"source":"index.js","original":{"line":59,"column":32}},{"generated":{"line":50,"column":48},"source":"index.js","original":{"line":59,"column":42}},{"name":"html","generated":{"line":51,"column":0},"source":"index.js","original":{"line":60,"column":8}},{"name":"post","generated":{"line":51,"column":62},"source":"index.js","original":{"line":62,"column":22}},{"name":"title","generated":{"line":51,"column":67},"source":"index.js","original":{"line":62,"column":27}},{"generated":{"line":51,"column":72},"source":"index.js","original":{"line":60,"column":8}},{"name":"post","generated":{"line":51,"column":107},"source":"index.js","original":{"line":63,"column":22}},{"name":"author","generated":{"line":51,"column":112},"source":"index.js","original":{"line":63,"column":27}},{"generated":{"line":51,"column":118},"source":"index.js","original":{"line":63,"column":22}},{"name":"name","generated":{"line":51,"column":119},"source":"index.js","original":{"line":63,"column":34}},{"generated":{"line":51,"column":123},"source":"index.js","original":{"line":60,"column":8}},{"generated":{"line":52,"column":0},"source":"index.js","original":{"line":66,"column":5}},{"generated":{"line":52,"column":5},"source":"index.js","original":{"line":59,"column":4}},{"name":"document","generated":{"line":54,"column":0},"source":"index.js","original":{"line":68,"column":4}},{"name":"getElementById","generated":{"line":54,"column":13},"source":"index.js","original":{"line":68,"column":13}},{"generated":{"line":54,"column":27},"source":"index.js","original":{"line":68,"column":4}},{"generated":{"line":54,"column":28},"source":"index.js","original":{"line":68,"column":28}},{"generated":{"line":54,"column":35},"source":"index.js","original":{"line":68,"column":4}},{"name":"innerHTML","generated":{"line":54,"column":37},"source":"index.js","original":{"line":68,"column":37}},{"generated":{"line":54,"column":46},"source":"index.js","original":{"line":68,"column":4}},{"name":"html","generated":{"line":54,"column":49},"source":"index.js","original":{"line":68,"column":49}},{"generated":{"line":54,"column":53},"source":"index.js","original":{"line":68,"column":4}},{"generated":{"line":55,"column":0},"source":"index.js","original":{"line":69,"column":1}},{"generated":{"line":55,"column":1},"source":"index.js","original":{"line":56,"column":0}}],"sources":{"index.js":"import ApolloBoost, { gql } from 'apollo-boost'\n\n// Questions:\n// 1. How do we define an operation in JavaScript?\n// 2. How do we send that off to the server to fetch a response?\n// 3. How do we access the response?\n\nconst client = new ApolloBoost({\n    uri: 'http://localhost:4000'\n})\n\nconst getUsers = gql`\n    query {\n        users {\n            id\n            name\n        }\n    }\n`\n\nclient.query({\n    query: getUsers\n}).then((response) => {\n    let html = ''\n\n    response.data.users.forEach((user) => {\n        html += `\n            <div>\n                <h3>${user.name}</h3>\n            </div>\n        `\n    })\n\n    document.getElementById('users').innerHTML = html\n})\n\n//\n// Goal: Render all published posts to the browser\n//\n// 1. Define the operation using gql \n// 2. Send off the query using client\n// 3. Use the response data to render a list of post titles along with author names\n// 4. Test your work\n\nconst getPosts = gql`\n    query {\n        posts {\n            title\n            author {\n                name\n            }\n        }\n    }\n`\n\nclient.query({ query: getPosts }).then((response) => {\n    let html = ''\n\n    response.data.posts.forEach((post) => {\n        html += `\n            <div>\n                <h3>${post.title}</h3>\n                <h4>${post.author.name}</h4>\n            </div>\n        `\n    })\n\n    document.getElementById('posts').innerHTML = html\n})"},"lineCount":null}},"hash":"ca1ccf21981af81f09223974aa0daa9e","cacheData":{"env":{}}}