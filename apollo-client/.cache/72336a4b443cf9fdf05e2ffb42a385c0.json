{"id":"../node_modules/fclone/dist/fclone.js","dependencies":[{"name":"/Users/Andrew/Desktop/graphql-course/apollo-client/node_modules/fclone/package.json","includedInParent":true,"mtime":1536848279958},{"name":"/Users/Andrew/Desktop/graphql-course/apollo-client/package.json","includedInParent":true,"mtime":1536848280567},{"name":"buffer","parent":"/Users/Andrew/Desktop/graphql-course/apollo-client/node_modules/fclone/dist/fclone.js","resolved":"/Users/Andrew/Desktop/graphql-course/apollo-client/node_modules/buffer/index.js"}],"generated":{"js":"var define;\nvar Buffer = require(\"buffer\").Buffer;\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define('fclone', [], factory);\n    } else if (typeof module === 'object' && module.exports) {\n\t\t\t  //node\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.fclone = factory();\n    }\n}(this, function () {\n  'use strict';\n\n// see if it looks and smells like an iterable object, and do accept length === 0\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nfunction isArrayLike(item) {\n  if (Array.isArray(item)) return true;\n\n  var len = item && item.length;\n  return typeof len === 'number' && (len === 0 || len - 1 in item) && typeof item.indexOf === 'function';\n}\n\nfunction fclone(obj, refs) {\n  if (!obj || \"object\" !== (typeof obj === 'undefined' ? 'undefined' : _typeof(obj))) return obj;\n\n  if (obj instanceof Date) {\n    return new Date(obj);\n  }\n\n  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(obj)) {\n    return new Buffer(obj);\n  }\n\n  // typed array Int32Array etc.\n  if (typeof obj.subarray === 'function' && /[A-Z][A-Za-z\\d]+Array/.test(Object.prototype.toString.call(obj))) {\n    return obj.subarray(0);\n  }\n\n  if (!refs) {\n    refs = [];\n  }\n\n  if (isArrayLike(obj)) {\n    refs[refs.length] = obj;\n    var _l = obj.length;\n    var i = -1;\n    var _copy = [];\n\n    while (_l > ++i) {\n      _copy[i] = ~refs.indexOf(obj[i]) ? '[Circular]' : fclone(obj[i], refs);\n    }\n\n    refs.length && refs.length--;\n    return _copy;\n  }\n\n  refs[refs.length] = obj;\n  var copy = {};\n\n  if (obj instanceof Error) {\n    copy.name = obj.name;\n    copy.message = obj.message;\n    copy.stack = obj.stack;\n  }\n\n  var keys = Object.keys(obj);\n  var l = keys.length;\n\n  while (l--) {\n    var k = keys[l];\n    copy[k] = ~refs.indexOf(obj[k]) ? '[Circular]' : fclone(obj[k], refs);\n  }\n\n  refs.length && refs.length--;\n  return copy;\n}\n\nfclone.default = fclone;\n  return fclone\n}));","map":{"mappings":[{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/fclone/dist/fclone.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}}],"sources":{"../node_modules/fclone/dist/fclone.js":"(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define('fclone', [], factory);\n    } else if (typeof module === 'object' && module.exports) {\n\t\t\t  //node\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.fclone = factory();\n    }\n}(this, function () {\n  'use strict';\n\n// see if it looks and smells like an iterable object, and do accept length === 0\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nfunction isArrayLike(item) {\n  if (Array.isArray(item)) return true;\n\n  var len = item && item.length;\n  return typeof len === 'number' && (len === 0 || len - 1 in item) && typeof item.indexOf === 'function';\n}\n\nfunction fclone(obj, refs) {\n  if (!obj || \"object\" !== (typeof obj === 'undefined' ? 'undefined' : _typeof(obj))) return obj;\n\n  if (obj instanceof Date) {\n    return new Date(obj);\n  }\n\n  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(obj)) {\n    return new Buffer(obj);\n  }\n\n  // typed array Int32Array etc.\n  if (typeof obj.subarray === 'function' && /[A-Z][A-Za-z\\d]+Array/.test(Object.prototype.toString.call(obj))) {\n    return obj.subarray(0);\n  }\n\n  if (!refs) {\n    refs = [];\n  }\n\n  if (isArrayLike(obj)) {\n    refs[refs.length] = obj;\n    var _l = obj.length;\n    var i = -1;\n    var _copy = [];\n\n    while (_l > ++i) {\n      _copy[i] = ~refs.indexOf(obj[i]) ? '[Circular]' : fclone(obj[i], refs);\n    }\n\n    refs.length && refs.length--;\n    return _copy;\n  }\n\n  refs[refs.length] = obj;\n  var copy = {};\n\n  if (obj instanceof Error) {\n    copy.name = obj.name;\n    copy.message = obj.message;\n    copy.stack = obj.stack;\n  }\n\n  var keys = Object.keys(obj);\n  var l = keys.length;\n\n  while (l--) {\n    var k = keys[l];\n    copy[k] = ~refs.indexOf(obj[k]) ? '[Circular]' : fclone(obj[k], refs);\n  }\n\n  refs.length && refs.length--;\n  return copy;\n}\n\nfclone.default = fclone;\n  return fclone\n}));"},"lineCount":85}},"hash":"d375402d245b097ae8b806bcfc5f46a8","cacheData":{"env":{}}}